name: PyPI Release
on:
  push:
    tags:
      - v*

env:
  PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  DIST_DIR: ${{ github.sha }}

jobs:
  # The `build` job runs on all platforms and distributions to build the wheels.
  build:
    name: Build on ${{ matrix.platform || matrix.os }} (${{ matrix.target }} - ${{ matrix.manylinux || 'auto' }})

    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'

    runs-on: ${{ matrix.os }}-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          architecture: ${{ matrix.python-architecture || 'x64' }}

      - name: Install twine
        run: pip install -U twine

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          working-directory: ./bindings/python
          manylinux: ${{ matrix.manylinux || 'auto' }}
          container: ${{ matrix.container }}
          args: --release --out dist --interpreter ${{ matrix.interpreter || '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.7 pypy3.8 pypy3.9 pypy3.10' }} ${{ matrix.extra-build-args }}
          rust-toolchain: stable
          docker-options: -e CI

      - name: List wheels
        run: ${{ matrix.ls || 'ls -lh' }} dist/
        working-directory: ./bindings/python

      - name: Check wheels
        run: twine check --strict dist/*
        working-directory: ./bindings/python

      - name: Upload wheels to Github
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./bindings/python/dist

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12 pypy3.8 pypy3.9 pypy3.10
          - os: windows
            ls: dir
            target: x86_64
            python-architecture: x64
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12
          - os: windows
            ls: dir
            target: i686
            python-architecture: x86
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12
          - os: macos
            target: aarch64
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
          - os: ubuntu
            platform: linux
            target: i686
          - os: ubuntu
            platform: linux
            target: aarch64
          - os: ubuntu
            platform: linux
            target: armv7
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12 3.13
          - os: ubuntu
            platform: linux
            target: x86_64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: aarch64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: ppc64le
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12 3.13
          - os: ubuntu
            platform: linux
            target: s390x
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12 3.13
        exclude:
          - os: windows
            target: aarch64

  # The `publish` job runs on the latest tag and publishes the wheels to PyPI.
  publish:
    name: Publish on PyPI

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          architecture: x64

      - name: Retrieve wheels
        uses: actions/download-artifact@v2
        with:
          name: wheels
          path: ./bindings/python/dist

      - name: Upload to PyPi
        working-directory: ./bindings/python
        run: |
          pip install twine
          twine upload dist/* -u __token__ -p "$PYPI_TOKEN"
